{"name":"Pysswords","tagline":"Pysswords manages login credentials in a local encrypted database","body":"# Pysswords: Manage your passwords from the terminal\r\n\r\n[Pysswords](https://marcwebbie.github.io/pysswords) lets you manage\r\nyour login credentials from the terminal. Password files are saved into\r\n[GnuGPG](http://en.wikipedia.org/wiki/GNU_Privacy_Guard) encrypted files\r\ninto the Database Path\\_. Only with the passphrase used to create the\r\npyssword database you can decrypt password files. If you want to know\r\nmore about how pysswords works internally, check the Under the Hood\\_\r\nsection.\r\n\r\n![Pysswords console interface](https://github.com/marcwebbie/pysswords/raw/master/images/pysswords2.png)\r\n\r\n------------------------------------------------------------------------\r\n\r\n## Main Features\r\n\r\n+ `☑` Console interface\r\n+ `☑` Manage multiple databases\r\n+ `☑` Add, edit, remove credentials\r\n+ `☑` Copy passwords to clipboard\r\n+ `☑` List credentials as a table\r\n+ `☑` Colored output\r\n+ `☑` Search credentials by name, login or comments\r\n+ `☑` Search with regular expression\r\n+ `☑` Bulk update/remove credentials\r\n+ `☑` Select credentials by fullname syntax\r\n+ `☑` Grouping credentials\r\n+ `☑` Exporting Pysswords database\r\n+ `☑` Importing Pysswords database\r\n+ `☐` Undo/Redo modifications to the database\r\n+ `☐` Importing credentials from other applications\r\n\r\n> `☑` implemented feature, `☐` not implemented feature.\r\n\r\n## Installation\r\n\r\n### Stable version ![pypi version](https://img.shields.io/pypi/v/pysswords.svg)\r\n\r\nMake sure you have [GPG](https://www.gnupg.org/) and [pip](http://pip.readthedocs.org/en/latest/installing.html) installed:\r\n\r\n```bash\r\npip install pysswords\r\n```\r\n\r\n### Development version [![Test Coverage](https://img.shields.io/coveralls/marcwebbie/pysswords.svg)](https://coveralls.io/r/marcwebbie/pysswords) [![Code Health](https://landscape.io/github/marcwebbie/pysswords/master/landscape.svg)](https://landscape.io/github/marcwebbie/pysswords/master)\r\n\r\nLinux/OSX | Windows\r\n----------|---------\r\n[![Build](https://travis-ci.org/marcwebbie/pysswords.svg)](https://travis-ci.org/marcwebbie/pysswords) | [![Build on windows](https://ci.appveyor.com/api/projects/status/5b7p1vo3y9x3y35t?svg=true)](https://ci.appveyor.com/project/marcwebbie/pysswords)\r\n\r\nThe **latest development version** can be installed directly from GitHub:\r\n\r\n```bash\r\n$ pip install --upgrade https://github.com/marcwebbie/pysswords/tarball/master\r\n```\r\n\r\n## Quickstart\r\n\r\n```bash\r\n# create a new credentials database. Option: `-I` or `--init`\r\npysswords --init\r\n\r\n# add new credentials. Option: `-a` or `--add`\r\npysswords -a\r\n\r\n# get credential \"example\". Option: `-g` or `--get`\r\npysswords -g example\r\n\r\n# edit credential \"example\". Option: `-u` or `--update`\r\npysswords -u example\r\n\r\n# remove credential \"example\". Option: `-r` or `--remove`\r\npysswords -r example\r\n\r\n# search credentials by \"exam\". Option: `-s` or `--search`\r\npysswords -s exam\r\n\r\n# search credentials using regular expressions Option: `-s` or `--search`.\r\npysswords -s example\\.com|org\r\n\r\n# copy password from credential \"example\" into system clipboard.\r\n# this option have to be used with --get|-g option\r\n# Option: `-c` or `--clipboard`\r\npysswords -c -g example\r\n\r\n# print all credentials as a table with hidden passwords\r\npysswords\r\n\r\n# print all credentials as a table with passwords in plain text.\r\n# Option: `-P` or `--show-password`\r\npysswords -P\r\n\r\n# specify other Pysswords database. Option `-D` or `--database`\r\npysswords -D /path/to/other/database\r\n\r\n# delete database and remove all credentials\r\n# Option: `--clean`\r\npysswords --clean\r\n\r\n# shows help. Option `-h` or `--help`\r\npysswords --help\r\n\r\n# shows version. Option `--version`\r\npysswords --version\r\n```\r\n\r\n## Tutorials\r\n\r\n### 1) Syncing your database\r\n\r\n#### Dropbox\r\n\r\nWith Pysswords database on default path `~/.pysswords` and with a Dropbox shared directory on path `~/Dropbox`\r\n\r\n```bash\r\n# move your Pysswords database inside your Dropbox directory\r\nmv ~/.pysswords ~/Dropbox/.pysswords\r\n\r\n# create a symbolic link to your shared .pysswords directory on the default path.\r\nln -s ~/Dropbox/.pysswords ~/.pysswords\r\n```\r\n\r\n#### Google Drive\r\n\r\nWith Pysswords database on default path `~/.pysswords` and with a GoogleDrive shared directory on path `~/GoogleDrive`\r\n\r\n```bash\r\n# move your Pysswords database inside your Dropbox directory\r\nmv ~/.pysswords ~/GoogleDrive/.pysswords\r\n\r\n# create a symbolic link to your shared .pysswords directory on the default path.\r\nln -s ~/GoogleDrive/.pysswords ~/.pysswords\r\n```\r\n\r\n### 2) Exporting/Importing Pyssword databases\r\n\r\n```bash\r\n# export database to a pysswords database file called pysswords.db\r\n# Option: `--export`\r\npysswords --export pysswords.db\r\n\r\n# import database from pysswords database file called pysswords.db\r\n# Option: `--import`\r\npysswords --import pysswords.db\r\n\r\n```\r\n\r\n### 3) Grouping credentials by name\r\n\r\nPysswords credentials handles multiple logins for each name which groups credentials by name:\r\n\r\n```bash\r\n# create john credential\r\npysswords -a\r\nName: example.com\r\nLogin: john\r\nPassword: **********\r\nComment: No comment\r\n\r\n# create doe credential\r\npysswords -a\r\nName: example.com\r\nLogin: doe\r\nPassword: **********\r\nComment:\r\n\r\n# listing credentials\r\npysswords\r\n\r\n| Name        | Login   | Password   | Comment    |\r\n|-------------+---------+------------+------------|\r\n| example.com | doe     | ***        |            |\r\n| example.com | john    | ***        | No comment |\r\n```\r\n\r\n### 4) Selecting credentials by fullname syntax\r\n\r\nYou can select grouped credentials by using fullname syntax `login@name`:\r\n\r\n```bash\r\npysswords -g doe@example.com\r\n\r\n| Name        | Login   | Password   | Comment   |\r\n|-------------+---------+------------+-----------|\r\n| example.com | doe     | ***        |           |\r\n```\r\n\r\n### 5) Using multiple databases\r\n\r\nSometimes it is useful to have multiple databases with different passphrases for higher security. This can be done using `-D` Pysswords option.\r\n\r\n\r\n#### Creating databases on a given directory (ex: `~/databases`)\r\n\r\n```bash\r\n# create personal Pysswords database\r\npysswords --init -D ~/databases/personal_passwords\r\n\r\n# create work Pysswords database\r\npysswords --init -D ~/databases/work_passwords\r\n\r\n# create junk Pysswords database\r\npysswords --init -D ~/databases/junk_passwords\r\n```\r\n\r\n#### Adding passwords to specific database\r\n\r\n```bash\r\n# add password to personal Pysswords database\r\npysswords -D ~/databases/personal_passwords -a\r\n\r\n# add password to junk Pysswords database\r\npysswords -D ~/databases/junk_passwords -a\r\n```\r\n\r\n##### Adding passwords to specific database\r\n\r\n```bash\r\n# listing specific databases\r\npysswords -D ~/databases/junk_passwords\r\n```\r\n\r\n## Under The Hood\r\n\r\n### Encryption\r\n\r\nEncryption is done with **GnuGPG** using [AES256](http://en.wikipedia.org/wiki/Advanced_Encryption_Standard). Take a look at [pysswords.crypt](https://github.com/marcwebbie/pysswords/blob/master/pysswords/crypt.py) module to know more.\r\n\r\n### Database Path\r\n\r\nThe default database path is at `~/.pysswords`. If you want to change the database path, add `--database` option to pysswords together with `--init`.\r\n\r\n```bash\r\npysswords --init --database \"/path/to/another/database/\"\r\n```\r\n\r\n### Database structure\r\n\r\nPysswords database is structured in a directory hierachy. Every\r\ncredential is a `.pyssword` file inside a directory named after a credential group.\r\n\r\nAn empty database would look like this:\r\n\r\n```bash\r\npysswords --database /tmp/pysswords --init\r\n\r\ntree /tmp/pysswords -la\r\n# /tmp/pysswords\r\n# └── .keys\r\n#     ├── pubring.gpg\r\n#     ├── random_seed\r\n#     ├── secring.gpg\r\n#     └── trustdb.gpg\r\n```\r\n\r\nAfter adding a new credential the database would look like this:\r\n\r\n```bash\r\npysswords --database /tmp/pysswords -a\r\n# Name: github.com\r\n# Login: octocat\r\n# Password: **********\r\n# Comments:\r\n\r\ntree /tmp/pysswords -la\r\n# /tmp/pysswords\r\n# ├── .keys\r\n# │   ├── pubring.gpg\r\n# │   ├── random_seed\r\n# │   ├── secring.gpg\r\n# │   └── trustdb.gpg\r\n# └── github.com\r\n#     └── octocat.pyssword\r\n```\r\n\r\nIf we add more credentials to group github.com. Directory structure would be:\r\n\r\n```bash\r\npysswords --database /tmp/pysswords -a\r\n# Name: github.com\r\n# Login: octocat2\r\n# Password: **********\r\n# Comments:\r\n\r\ntree /tmp/pysswords -la\r\n# /tmp/pysswords\r\n# ├── .keys\r\n# │   ├── pubring.gpg\r\n# │   ├── random_seed\r\n# │   ├── secring.gpg\r\n# │   └── trustdb.gpg\r\n# └── github\r\n#     └── octocat.pyssword\r\n#     └── octocat2.pyssword\r\n```\r\n\r\n## Contributing\r\n\r\n- Fork the repository [https://github.com/marcwebbie/pysswords/fork](https://github.com/marcwebbie/pysswords/fork)\r\n- Read the [Makefile](https://github.com/marcwebbie/pysswords/blob/master/Makefile)\r\n- Write your tests on `tests/test.py`\r\n- If everything is OK. push your changes and make a pull request. ;)\r\n\r\n## License ([MIT License](http://choosealicense.com/licenses/mit/))\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2015 Marc Webbie, <http://github.com/marcwebbie>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a\r\ncopy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included\r\nin all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-58093107-1","note":"Don't delete this file! It's used internally to help with page regeneration."}