{"name":"Passpie","tagline":"Passpie: manage login credentials from the terminal","body":"# Passpie: Manage your passwords from the terminal\r\n\r\n[Passpie](https://marcwebbie.github.io/passpie) lets you manage\r\nyour login credentials from the terminal. Password files are saved into\r\n[GnuPG](http://en.wikipedia.org/wiki/GNU_Privacy_Guard) encrypted files\r\ninto the Database Path. Only with the passphrase used to create the\r\npass database you can decrypt password files. If you want to know\r\nmore about how passpie works internally, check Under the Hood section.\r\n\r\n![Passpie console interface](https://github.com/marcwebbie/passpie/raw/master/images/passpie.png)\r\n\r\n> Passpie is built with [Click](http://click.pocoo.org) for its interface, [TinyDB](https://github.com/msiemens/tinydb) for its database and [python-gnupg](https://github.com/isislovecruft/python-gnupg) for its encryption using gpg.\r\n\r\n------------------------------------------------------------------------\r\n\r\n\r\n## Features\r\n\r\n+ [x] Console interface\r\n+ [x] Manage multiple databases\r\n+ [x] Add, update, remove credentials\r\n+ [x] Copy passwords to clipboard\r\n+ [x] List credentials as a table\r\n+ [x] List credentials with a colored output\r\n+ [x] Search credentials by name, login or comments\r\n+ [x] Search with regular expression\r\n+ [x] Group credentials by name\r\n+ [x] Configure from configfile. `~/.passpie`\r\n+ [ ] Change passphrase and re-encrypt database\r\n+ [x] Export Passpie database to plain text file\r\n+ [x] Import plain text Passpie database\r\n+ [ ] Import credentials from [1Password](https://agilebits.com/onepassword)\r\n+ [ ] Import credentials from [Pysswords](https://github.com/marcwebbie/pysswords)\r\n+ [x] Randomly generated credential passwords\r\n+ [x] Generate database status report\r\n+ [ ] Undo/Redo updates to the database\r\n+ [ ] Bulk update/remove credentials\r\n\r\n\r\n-----\r\n\r\n[![pypi](https://img.shields.io/pypi/v/passpie.svg?style=flat-square&label=latest%20version)](https://pypi.python.org/pypi/passpie)\r\n[![unix_build](https://img.shields.io/travis/marcwebbie/passpie/master.svg?style=flat-square&label=unix%20build)](https://travis-ci.org/marcwebbie/passpie)\r\n[![windows_build](https://img.shields.io/appveyor/ci/marcwebbie/marcwebbie.svg?style=flat-square&label=windows%20build)](https://ci.appveyor.com/project/marcwebbie/passpie)\r\n[![coverage](https://img.shields.io/coveralls/marcwebbie/passpie/master.svg?style=flat-square)](https://coveralls.io/r/marcwebbie/passpie)\r\n\r\n-----\r\n\r\n## Installation\r\n\r\n### Stable version\r\n\r\nMake sure you have [GPG](https://www.gnupg.org/) and [pip](http://pip.readthedocs.org/en/latest/installing.html) installed:\r\n\r\n```bash\r\npip install passpie\r\n```\r\n\r\n### Development version\r\n\r\nThe **latest development version** can be installed directly from GitHub:\r\n\r\n```bash\r\n$ pip install --upgrade https://github.com/marcwebbie/passpie/tarball/master\r\n```\r\n\r\n## Quickstart\r\n\r\n```bash\r\n# create a new credentials database.\r\npasspie init\r\n\r\n# add new credentials.\r\npasspie add foo@example.com\r\n\r\n# edit credential \"example\".\r\npasspie update foo@example\r\n\r\n# copy password from credential \"foo@example\" into system clipboard.\r\npasspie copy foo@example\r\n\r\n# search credentials by \"exam\".\r\npasspie search exam\r\n\r\n# search credentials using regular expressions.\r\npasspie search 'example\\.com|org'\r\n\r\n# remove credential \"foo@example\".\r\npasspie remove foo@example\r\n\r\n# check database credential status\r\npasspie status\r\n\r\n# print all credentials as a table with hidden passwords\r\npasspie\r\n\r\n# specify other Passpie database. Option `-D` or `--database`\r\npasspie -D /path/to/other/database\r\n\r\n# shows help. Option `-h` or `--help`\r\npasspie --help\r\n\r\n# shows version. Option `--version`\r\npasspie --version\r\n```\r\n\r\n## Commands\r\n\r\n### `init`:\r\n\r\nInitialize database\r\n\r\n### `add`:\r\n\r\nInsert new credential to database\r\n\r\n### `update`:\r\n\r\nUpdate credential from database\r\n\r\n### `remove`:\r\n\r\nRemove credential from database\r\n\r\n### `copy`:\r\n\r\nCopy credential password to clipboard\r\n\r\n### `search`:\r\n\r\nSearch credentials using regular expression\r\n\r\n### `status`:\r\n\r\nQuery database status for maintenance\r\n\r\n### `export`:\r\n\r\nExport credentials as plain text\r\n\r\n### `import`:\r\n\r\nImport credentials\r\n\r\n## Tutorials\r\n\r\n### 1) Syncing your database\r\n\r\n#### Dropbox\r\n\r\nWith Passpie database on default path `~/.passpie` and with a Dropbox shared directory on path `~/Dropbox`\r\n\r\n```bash\r\n# move your Passpie database inside your Dropbox directory\r\nmv ~/.passpie ~/Dropbox/.passpie\r\n\r\n# create a symbolic link to your shared .passpie directory on the default path.\r\nln -s ~/Dropbox/.passpie ~/.passpie\r\n```\r\n\r\n#### Google Drive\r\n\r\nWith Passpie database on default path `~/.passpie` and with a GoogleDrive shared directory on path `~/GoogleDrive`\r\n\r\n```bash\r\n# move your Passpie database inside your Dropbox directory\r\nmv ~/.passpie ~/GoogleDrive/.passpie\r\n\r\n# create a symbolic link to your shared .passpie directory on the default path.\r\nln -s ~/GoogleDrive/.passpie ~/.passpie\r\n```\r\n\r\n### 2) Exporting/Importing Passpie databases\r\n\r\n```bash\r\n# export database to a passpie database file called passpie.db\r\n# Option: `--export`\r\npasspie export passpie.db\r\n\r\n# import database from passpie database file called passpie.db\r\n# Option: `--import`\r\npasspie import passpie.db\r\n\r\n# import 1password 1pif exported file\r\npasspie import passwords.1pif/data1.1pif\r\n```\r\n\r\n### 3) Grouping credentials by name\r\n\r\nPasspie credentials handles multiple logins for each name which groups credentials by name:\r\n\r\n```bash\r\n# create john credential\r\npasspie add jonh@example.com --comment \"Jonh main mail\"\r\n#Password: **********\r\n\r\n# create doe credential\r\npasspie add doe@example.com --comment \"No comment\"\r\n#Password: **********\r\n\r\n# listing credentials\r\npasspie\r\n===========  =======  ==========  ===============\r\nname         login    password    comment\r\n===========  =======  ==========  ===============\r\nexample.com  doe      *****       No comment\r\nexample.com  jonh     *****       Jonh main email\r\n===========  =======  ==========  ===============\r\n```\r\n\r\n### 5) Using multiple databases\r\n\r\nSometimes it is useful to have multiple databases with different passphrases for higher security. This can be done using `-D` Passpie option.\r\n\r\n#### Creating databases on a given directory (ex: `~/databases`)\r\n\r\n```bash\r\n# create personal Passpie database\r\npasspie -D ~/databases/personal_passwords init\r\n\r\n# create work Passpie database\r\npasspie -D ~/databases/work_passwords init\r\n\r\n# create junk Passpie database\r\npasspie -D ~/databases/junk_passwords init\r\n```\r\n\r\n#### Adding passwords to specific database\r\n\r\n```bash\r\n# add password to personal Passpie database\r\npasspie -D ~/databases/personal_passwords add my@example\r\n\r\n# add password to junk Passpie database\r\npasspie -D ~/databases/junk_passwords add other@example\r\n```\r\n\r\n##### Listing passwords from specific database\r\n\r\n```bash\r\n# listing specific databases\r\npasspie -D ~/databases/junk_passwords\r\n```\r\n\r\n### Configuring passpie with `.passpierc`\r\n\r\nYou can override default passpie configuration with a `.passpierc` file on your home directory. Passpie configuration files must be written as a valid [yaml](http://yaml.org/) file.\r\n\r\n#### Example `.passpierc`:\r\n\r\n```yaml\r\npath: /Users/jon.doe/.passpie\r\nshort_commands: true\r\nshow_password: false\r\ntable_format: fancy_grid\r\ncolors:\r\n  login: green\r\n  name: yellow\r\n  password: cyan\r\nheaders:\r\n  - name\r\n  - login\r\n  - password\r\n  - comment\r\n```\r\n\r\nOptions:\r\n\r\n+ colors: *[black, red, green, yellow, blue, magenta, cyan, white]*\r\n+ headers: *[fullname, name, login, password, comment]*\r\n+ path: path to database. Default: *~/.passpie*\r\n+ table_format: *[rst, simple, orgtbl, fancy_grid]*\r\n+ short_commands: Use short commands aliases as in `passpie a` for `passpie add`\r\n  - true\r\n  - false\r\n+ show_password:\r\n  - true\r\n  - false\r\n\r\n## Under The Hood\r\n\r\n### Encryption\r\n\r\nEncryption is done with **GnuGPG** using [AES256](http://en.wikipedia.org/wiki/Advanced_Encryption_Standard). Take a look at [passpie.crypt](https://github.com/marcwebbie/passpie/blob/master/passpie/crypt.py) module to know more.\r\n\r\n### Database Path\r\n\r\nThe default database path is at `~/.passpie`. If you want to change the database path, add `--database` option to passpie. Together with `init` you can create arbitrary databases.\r\n\r\n```bash\r\npasspie --database \"/path/to/another/database/\" init\r\n```\r\n\r\n### Database structure\r\n\r\nPasspie database is structured in a directory hierachy. Every\r\ncredential is a `.pass` file inside a directory named after a credential group.\r\n\r\nAn empty database would look like this:\r\n\r\n```bash\r\npasspie --database /tmp/passpie init\r\n\r\ntree /tmp/passpie -la\r\n# /tmp/passpie\r\n# └── .keys\r\n```\r\n\r\nAfter adding a new credential the database would look like this:\r\n\r\n```bash\r\npasspie --database /tmp/passpie add octocat@github.com\r\n# Password: **********\r\n\r\ntree /tmp/passpie -la\r\n# /tmp/passpie\r\n# ├── .keys\r\n# └── github.com\r\n#     └── octocat.pass\r\n```\r\n\r\nIf we add more credentials to group github.com. Directory structure would be:\r\n\r\n```bash\r\npasspie --database /tmp/passpie add octocat2@github.com\r\n# Password: **********\r\n\r\ntree /tmp/passpie -la\r\n# /tmp/passpie\r\n# ├── .keys\r\n# └── github\r\n#     └── octocat.pass\r\n#     └── octocat2.pass\r\n```\r\n\r\n## Contributing\r\n\r\nFeel free to comment, open a bug report or ask for new features on Passpie [issues](https://github.com/marcwebbie/passpie/issues) page or over [Twitter](https://twitter.com/marcwebbie).\r\n\r\nIf you want to contributing with code:\r\n\r\n- Fork the repository [https://github.com/marcwebbie/passpie/fork](https://github.com/marcwebbie/passpie/fork)\r\n- Read the [Makefile](https://github.com/marcwebbie/passpie/blob/master/Makefile)\r\n\r\n\r\n## License ([MIT License](http://choosealicense.com/licenses/mit/))\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2015 Marc Webbie, <http://github.com/marcwebbie>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a\r\ncopy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included\r\nin all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-58093107-1","note":"Don't delete this file! It's used internally to help with page regeneration."}